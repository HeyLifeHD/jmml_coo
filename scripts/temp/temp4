#Libraries
library(MethylSeekR)
library(parallel)
library(bsseq)
library(BSgenome.Hsapiens.UCSC.hg19)
library(ChIPseeker)
library(ggpubr)
library(pheatmap)
library(LOLA)
#load my own data
#Directories
input.dir <- "/omics/groups/OE0219/internal/jmmlc_pbat/data/odcf_md/analysis/"
methylseekr.dir <-  "/omics/groups/OE0219/internal/jmmlc_pbat/data/odcf_md/analysis/200811_mergedPatientsHSCcb_methylseekr"

#load data
bsseq_merged <- readRDS(file.path(input.dir ,"bsseq", "bsseq_HSC_comb_snpRemoved_PatientMerged_CelltypeMerged.rds"))
UMRLMRsegments.gr <- readRDS(file.path(methylseekr.dir,  paste0("UMRsLMRs", ".rds")))

#reduce ranges
UMRLMRsegments <- lapply(UMRLMRsegments.gr, function(x){
    x <- reduce(x)
    x
})
red_UMRLMR<- disjoin(unlist(GRangesList(UMRLMRsegments)))
length(red_UMRLMR)

#same only for umr
UMRsegments <- lapply(UMRLMRsegments.gr, function(x){
    x <- x[which(x$type=="UMR"),]
    x <- reduce(x)
    x
})
red_UMR<- disjoin(unlist(GRangesList(UMRsegments)))
lapply(UMRsegments, length)
length(red_UMR)

#same for lmr
LMRsegments <- lapply(UMRLMRsegments.gr, function(x){
    x <- x[which(x$type=="LMR"),]
    x <- reduce(x)
    x
})
red_LMR<- disjoin(unlist(GRangesList(LMRsegments)))
length(red_LMR)



#load LOLA
datasets.dir <- "/home/heyj/c010-datasets/Internal/COPD/enrichment_databases/"
regionDB = readRDS(file.path(datasets.dir,"MSigDB_hg19_complete.rds"))


#Run Enrichment
test <- list(UMRLMRsegments,UMRsegments, LMRsegments)
names(test)<- c("UMR_LMR", "UMR", "LMR")
test_bg <- list(red_UMRLMR, red_UMR, red_LMR)
names(test_bg)<- c("UMR_LMR", "UMR", "LMR")

results_regionDB <- list() 
for (i in names(test)){
    userSets<- test[[i]]
    #set  Universe
    userUnisverse <- test_bg[[i]]
    #Run analysis
    #results_Core[[i]]= runLOLA(userSets, userUniverse, regionDB_Core, cores=4)
    results_regionDB[[i]]= runLOLA(userSets, userUnisverse, regionDB, cores=5)
    print(i)
}

})
dir.create(file.path(methylseekr.dir,"LOLA_resultTables"))
saveRDS(results_regionDB, file.path(methylseekr.dir, "LOLA_resultTables", "results_MSigDB_hg19.rds"))
results_regionDB<- readRDS(file.path(methylseekr.dir, "LOLA_resultTables", "results_MSigDB_hg19.rds"))


#function
label_func <- function(x){
    breaks <- x
    breaks[breaks>=200] <- ">=200"
    breaks
}
#run plotting
for(i in names(results_regionDB)){
    dir.create(file.path(methylseekr.dir, i,"LOLA"), recursive=TRUE)
    result <- results_regionDB[[i]]
    for(j in unique(unique(result$collection))){
        result_sub<- result[result$collection == j,]
        temp <- list()
        for(t in unique(result_sub$userSet)){
            temp[[t]]<- head(result_sub[result_sub$userSet==t,]$filename, 5)
        }
        temp <- unique(unlist(temp))
        result_sub2 <- result_sub[result_sub$filename %in% temp, ]
        #data preparation
        combined_data <- result_sub2[,c("userSet","dbSet", "pValueLog", "oddsRatio" ,"filename", "qValue")]#[userSet=="closed",]
        #combined_data$significant<- ifelse(locResults.LolaCore$qValue> 0.05, "No", "Yes" )
        combined_data$significant<- ifelse(combined_data$pValueLog< -log10(0.05), "No", "Yes" )
        #change infinite values
        #combined_data$pValueLog[is.infinite(combined_data$pValueLog)] <- 10*(max(combined_data$pValueLog[!is.infinite(combined_data$pValueLog)],na.rm=TRUE))
        combined_data$pValueLog[is.infinite(combined_data$pValueLog)] <- 200
        combined_data$filename<-sapply(strsplit(combined_data$filename,".bed", fixed=TRUE),`[`, 1)
        #plot
        g <- ggplot(data = combined_data, aes(y=filename, x=userSet))+coord_fixed()+
                geom_point(aes(size=pValueLog, fill=oddsRatio, color=significant), pch=21)+
                scale_fill_gradient2( midpoint = 1, low="darkblue", high="darkred", name = "Odds Ratio")+
                scale_colour_manual(values=c("grey", "black"), name="Significant", drop=FALSE)+
                scale_size(name="P-value\n(-log10)", labels = label_func) +
                scale_y_discrete(limits=rev(levels(as.factor(combined_data$filename))))+
                theme(text =element_text(size=14, color="black", family = "sans"),
                    axis.ticks = element_blank(), axis.line = element_blank(), 
                    axis.text.x=element_text(size=12, angle = 90, vjust = 0, color="black", family="sans"),
                    axis.text.y=element_text(size=12, family="sans", color="black"))+
                scale_x_discrete(name=NULL)+
                theme(legend.text=element_text(size=12, family="sans"), 
                    legend.title=element_text(size=12, family= "sans"),
                    legend.background = element_rect(fill="white", color="white"),
                    panel.background =  element_rect(fill="white"), panel.grid.major = element_line(color="lightgrey"),
                    legend.key = element_rect(fill="white"))+rremove("ylab")
        pdf(file.path(methylseekr.dir,i, "LOLA", paste0("EnrichLOLA_", j, ".pdf")), width=15, height=15)
        print(g)
        dev.off()
    }
}




#run plotting for all Sign
for(i in names(results_regionDB)){
    result <- results_regionDB[[i]]
    for(j in unique(unique(result$collection))){
        result_sub<- result[result$collection == j,]

        temp <- list()
        for(t in unique(result_sub$userSet)){
            temp[[t]]<- result_sub[result_sub$userSet==t& result_sub$pValueLog > 2,]$filename
        }
        temp <- unique(unlist(temp))
        result_sub2 <- result_sub[result_sub$filename %in% temp, ]

        #data preparation
        combined_data <- result_sub2[,c("userSet","dbSet", "pValueLog", "oddsRatio" ,"filename", "qValue")]#[userSet=="closed",]
        #combined_data$significant<- ifelse(locResults.LolaCore$qValue> 0.05, "No", "Yes" )
        combined_data$significant<- ifelse(combined_data$pValueLog< -log10(0.05), "No", "Yes" )
        #change infinite values
        #combined_data$pValueLog[is.infinite(combined_data$pValueLog)] <- 10*(max(combined_data$pValueLog[!is.infinite(combined_data$pValueLog)],na.rm=TRUE))
        combined_data$pValueLog[is.infinite(combined_data$pValueLog)] <- 200
        combined_data$filename<-sapply(strsplit(combined_data$filename,".bed", fixed=TRUE),`[`, 1)
        #plot
        g <- ggplot(data = combined_data, aes(y=filename, x=userSet))+coord_fixed()+
                geom_point(aes(size=pValueLog, fill=oddsRatio, color=significant), pch=21)+
                scale_fill_gradient2( midpoint = 1, low="darkblue", high="darkred", name = "Odds Ratio")+
                scale_colour_manual(values=c("grey", "black"), name="Significant", drop=FALSE)+
                scale_size(name="P-value\n(-log10)", labels = label_func) +
                scale_y_discrete(limits=rev(levels(as.factor(combined_data$filename))))+
                theme(text =element_text(size=14, color="black", family = "sans"),
                    axis.ticks = element_blank(), axis.line = element_blank(), 
                    axis.text.x=element_text(size=12, angle = 90, vjust = 0, color="black", family="sans"),
                    axis.text.y=element_text(size=12, family="sans", color="black"))+
                scale_x_discrete(name=NULL)+
                theme(legend.text=element_text(size=12, family="sans"), 
                    legend.title=element_text(size=12, family= "sans"),
                    legend.background = element_rect(fill="white", color="white"),
                    panel.background =  element_rect(fill="white"), panel.grid.major = element_line(color="lightgrey"),
                    legend.key = element_rect(fill="white"))+rremove("ylab")
        pdf(file.path(methylseekr.dir,i, "LOLA", paste0("EnrichLOLA_", j, "_allSig.pdf")), width=15, height=20)
        print(g)
        dev.off()
    }
}



#same for hallmarks
regionDB = loadRegionDB(file.path(datasets.dir,"MSigDB_hg19_Hallmarks"))

results_regionDB <- list() 
for (i in names(test)){
    userSets<- test[[i]]
    #set  Universe
    userUnisverse <- test_bg[[i]]
    #Run analysis
    #results_Core[[i]]= runLOLA(userSets, userUniverse, regionDB_Core, cores=4)
    results_regionDB[[i]]= runLOLA(userSets, userUnisverse, regionDB, cores=5)
    print(i)
}

})
dir.create(file.path(methylseekr.dir,"LOLA_resultTables"))
saveRDS(results_regionDB, file.path(methylseekr.dir, "LOLA_resultTables", "results_MSigDB_hg19_hallmarks.rds"))
#results_regionDB<- readRDS(file.path(methylseekr.dir, "LOLA_resultTables", "results_MSigDB_hg19_hallmarks.rds"))


#function
label_func <- function(x){
    breaks <- x
    breaks[breaks>=200] <- ">=200"
    breaks
}
#run plotting
for(i in names(results_regionDB)){
    dir.create(file.path(methylseekr.dir, i,"LOLA"), recursive=TRUE)
    result <- results_regionDB[[i]]
    for(j in unique(unique(result$collection))){
        result_sub<- result[result$collection == j,]
        temp <- list()
        for(t in unique(result_sub$userSet)){
            temp[[t]]<- head(result_sub[result_sub$userSet==t,]$filename, 5)
        }
        temp <- unique(unlist(temp))
        result_sub2 <- result_sub[result_sub$filename %in% temp, ]
        #data preparation
        combined_data <- result_sub2[,c("userSet","dbSet", "pValueLog", "oddsRatio" ,"filename", "qValue")]#[userSet=="closed",]
        #combined_data$significant<- ifelse(locResults.LolaCore$qValue> 0.05, "No", "Yes" )
        combined_data$significant<- ifelse(combined_data$pValueLog< -log10(0.05), "No", "Yes" )
        #change infinite values
        #combined_data$pValueLog[is.infinite(combined_data$pValueLog)] <- 10*(max(combined_data$pValueLog[!is.infinite(combined_data$pValueLog)],na.rm=TRUE))
        combined_data$pValueLog[is.infinite(combined_data$pValueLog)] <- 200
        combined_data$filename<-sapply(strsplit(combined_data$filename,".bed", fixed=TRUE),`[`, 1)
        #plot
        g <- ggplot(data = combined_data, aes(y=filename, x=userSet))+coord_fixed()+
                geom_point(aes(size=pValueLog, fill=oddsRatio, color=significant), pch=21)+
                scale_fill_gradient2( midpoint = 1, low="darkblue", high="darkred", name = "Odds Ratio")+
                scale_colour_manual(values=c("grey", "black"), name="Significant", drop=FALSE)+
                scale_size(name="P-value\n(-log10)", labels = label_func) +
                scale_y_discrete(limits=rev(levels(as.factor(combined_data$filename))))+
                theme(text =element_text(size=14, color="black", family = "sans"),
                    axis.ticks = element_blank(), axis.line = element_blank(), 
                    axis.text.x=element_text(size=12, angle = 90, vjust = 0, color="black", family="sans"),
                    axis.text.y=element_text(size=12, family="sans", color="black"))+
                scale_x_discrete(name=NULL)+
                theme(legend.text=element_text(size=12, family="sans"), 
                    legend.title=element_text(size=12, family= "sans"),
                    legend.background = element_rect(fill="white", color="white"),
                    panel.background =  element_rect(fill="white"), panel.grid.major = element_line(color="lightgrey"),
                    legend.key = element_rect(fill="white"))+rremove("ylab")
        pdf(file.path(methylseekr.dir,i, "LOLA", paste0("EnrichLOLA_", j, ".pdf")), width=15, height=15)
        print(g)
        dev.off()
    }
}




#run plotting for all Sign
for(i in names(results_regionDB)){
    result <- results_regionDB[[i]]
    for(j in unique(unique(result$collection))){
        result_sub<- result[result$collection == j,]

        temp <- list()
        for(t in unique(result_sub$userSet)){
            temp[[t]]<- result_sub[result_sub$userSet==t& result_sub$pValueLog > 2,]$filename
        }
        temp <- unique(unlist(temp))
        result_sub2 <- result_sub[result_sub$filename %in% temp, ]

        #data preparation
        combined_data <- result_sub2[,c("userSet","dbSet", "pValueLog", "oddsRatio" ,"filename", "qValue")]#[userSet=="closed",]
        #combined_data$significant<- ifelse(locResults.LolaCore$qValue> 0.05, "No", "Yes" )
        combined_data$significant<- ifelse(combined_data$pValueLog< -log10(0.05), "No", "Yes" )
        #change infinite values
        #combined_data$pValueLog[is.infinite(combined_data$pValueLog)] <- 10*(max(combined_data$pValueLog[!is.infinite(combined_data$pValueLog)],na.rm=TRUE))
        combined_data$pValueLog[is.infinite(combined_data$pValueLog)] <- 200
        combined_data$filename<-sapply(strsplit(combined_data$filename,".bed", fixed=TRUE),`[`, 1)
        #plot
        g <- ggplot(data = combined_data, aes(y=filename, x=userSet))+coord_fixed()+
                geom_point(aes(size=pValueLog, fill=oddsRatio, color=significant), pch=21)+
                scale_fill_gradient2( midpoint = 1, low="darkblue", high="darkred", name = "Odds Ratio")+
                scale_colour_manual(values=c("grey", "black"), name="Significant", drop=FALSE)+
                scale_size(name="P-value\n(-log10)", labels = label_func) +
                scale_y_discrete(limits=rev(levels(as.factor(combined_data$filename))))+
                theme(text =element_text(size=14, color="black", family = "sans"),
                    axis.ticks = element_blank(), axis.line = element_blank(), 
                    axis.text.x=element_text(size=12, angle = 90, vjust = 0, color="black", family="sans"),
                    axis.text.y=element_text(size=12, family="sans", color="black"))+
                scale_x_discrete(name=NULL)+
                theme(legend.text=element_text(size=12, family="sans"), 
                    legend.title=element_text(size=12, family= "sans"),
                    legend.background = element_rect(fill="white", color="white"),
                    panel.background =  element_rect(fill="white"), panel.grid.major = element_line(color="lightgrey"),
                    legend.key = element_rect(fill="white"))+rremove("ylab")
        pdf(file.path(methylseekr.dir,i, "LOLA", paste0("EnrichLOLA_", j, "_allSig.pdf")), width=15, height=20)
        print(g)
        dev.off()
    }
}


